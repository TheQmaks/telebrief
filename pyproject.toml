[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "telebrief"
version = "1.0.0"
description = "Telegram channel parser for metrics analysis"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Anatoliy Fedorenko"},
]
keywords = ["telegram", "analytics", "parser", "metrics", "social-media"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "html2text>=2020.1.16",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.8",
    "mypy>=1.8.0",
    "types-requests>=2.32.0",
    "types-beautifulsoup4>=4.12.0",
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "pre-commit>=3.5.0",
]

[project.scripts]
telebrief = "telebrief.cli:main"

[project.urls]
Homepage = "https://github.com/TheQmaks/telebrief"
Repository = "https://github.com/TheQmaks/telebrief"
Issues = "https://github.com/TheQmaks/telebrief/issues"

# ==================== SETUPTOOLS CONFIGURATION ====================
[tool.setuptools]
# Package discovery - only include telebrief package
packages = ["telebrief", "telebrief.core", "telebrief.models", "telebrief.utils"]

# ==================== RUFF CONFIGURATION ====================
[tool.ruff]
# Target Python version
target-version = "py311"

# Include various directories
include = ["*.py", "*.pyi", "**/pyproject.toml"]

# Exclude unnecessary directories
exclude = [
    ".bzr",
    ".direnv", 
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "__pycache__",
    "logs",
    "output",
]

# Line length (matches Black)
line-length = 100

# Automatically fix errors where possible
fix = true

# Show fixes in output
show-fixes = true

[tool.ruff.lint]
# Enable rule sets
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings  
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "ARG",    # flake8-unused-arguments
    "C90",    # mccabe complexity
    "T20",    # flake8-print
    "PL",     # pylint
    "PIE",    # flake8-pie
    "SIM",    # flake8-simplify
    "RUF",    # ruff-specific
    "N",      # pep8-naming
    "DTZ",    # flake8-datetimez
    "ICN",    # flake8-import-conventions
    "PT",     # flake8-pytest-style
]

# Disable certain rules
ignore = [
    "E501",   # line too long (handled by formatter)
    "B008",   # do not perform function calls in argument defaults
    "C901",   # too complex (sometimes complexity is needed)
    "PLR0913", # too many arguments
    "PLR0912", # too many branches
    "PLR0915", # too many statements
    "N806",   # variable name should be lowercase (for BeautifulSoup)
    "PT011",  # pytest-raises-too-broad
    "SIM108", # use ternary operator (not always readable)
    "RUF001", # ambiguous unicode characters (Cyrillic)
    "RUF002", # ambiguous unicode characters in docstrings (Cyrillic)
    "RUF003", # ambiguous unicode characters in comments (Cyrillic)
    "DTZ005", # datetime without timezone (for simplicity)
]

# Maximum McCabe complexity
mccabe.max-complexity = 10

[tool.ruff.lint.per-file-ignores]
# Tests can use assert and have more relaxed rules
"tests/**/*.py" = ["PLR2004", "S101", "ARG001", "ARG002"]
# Examples can have print and simpler structure
"example*.py" = ["T20", "PLR2004"]
# __init__.py files can be empty
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
# Import sorting settings
known-first-party = ["telebrief"]
known-third-party = ["requests", "bs4", "pytest"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.format]
# Formatting settings (similar to Black)
quote-style = "double"
indent-style = "space"
line-ending = "auto"

# ==================== MYPY CONFIGURATION ====================
[tool.mypy]
# Basic settings
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

# Show error codes
show_error_codes = true
show_error_context = true
pretty = true

# Where to look for types
mypy_path = "telebrief"

# Ignore missing types for external libraries
[[tool.mypy.overrides]]
module = [
    "bs4.*",
    "lxml.*",
]
ignore_missing_imports = true

# More relaxed rules for tests
[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false 